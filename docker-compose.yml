version: '3.9'

services:
  app:
    image: ${DOCKER_USERNAME}/play-hive:latest # 사용할 이미지 이름
    build:
      context: . # Dockerfile이 위치한 디렉토리
      dockerfile: Dockerfile # 빌드에 사용할 Dockerfile
    ports:
      - "8080:8080" # 호스트와 컨테이너의 포트 매핑
    environment:
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      DISCORD_APPLICATION_ID: ${DISCORD_APPLICATION_ID}
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
      DISCORD_CLIENT_SECRET: ${DISCORD_CLIENT_SECRET}
      KAKAO_CLIENT_ID: ${KAKAO_CLIENT_ID}
      KAKAO_CLIENT_SECRET: ${KAKAO_CLIENT_SECRET}
      NAVER_CLIENT_ID: ${NAVER_CLIENT_ID}
      NAVER_CLIENT_SECRET: ${NAVER_CLIENT_SECRET}
      SENDER_EMAIL: ${SENDER_EMAIL}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      DOCKER_USERNAME: ${DOCKER_USERNAME}
      DOCKER_PASSWORD: ${DOCKER_PASSWORD}
      DB_ENDPOINT: ${DB_ENDPOINT}
      FRONTEND_URL: ${FRONTEND_URL}
      DB_NAME: ${DB_NAME}
      DB_PASSWORD: ${DB_PASSWORD}
      SLACK_WEBHOOK_URL: ${SLACK_WEBHOOK_URL}
      MINIO_URL: ${MINIO_URL}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_REGION: ${MINIO_REGION}
      MINIO_BUCKET: ${MINIO_BUCKET}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_BUCKET: ${AWS_BUCKET}
      AWS_URL: ${AWS_URL}
      AES_SECRET_KEY: ${AES_SECRET_KEY}
      AES_IV: ${AES_IV}
      TZ: ${TZ}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    restart: always

  #  zookeeper:
  #    image: confluentinc/cp-zookeeper:latest
  #    container_name: zookeeper
  #    environment:
  #      ZOOKEEPER_CLIENT_PORT: 2181
  #    ports:
  #      - "2181:2181"
  #    restart: always
  #
  #  kafka:
  #    image: confluentinc/cp-kafka:latest
  #    container_name: kafka
  #    ports:
  #      - "9092:9092"
  #    environment:
  #      KAFKA_BROKER_ID: 1
  #      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
  #      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
  #      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
  #      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #      KAFKA_HEAP_OPTS: "-Xms256M -Xmx512M"
  #    depends_on:
  #      - zookeeper
  #    restart: always

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
    volumes:
      - minio_data:/data
    command: server /data
    restart: always

  redis:
    image: redis:latest
    container_name: redis-server
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}

volumes:
  minio_data:
    driver: local