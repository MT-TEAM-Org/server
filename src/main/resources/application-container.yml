spring:
  datasource:
    url: jdbc:h2:mem:~/playhive;MODE=MySQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: create-drop
    open-in-view: false
    properties:
      hibernate:
        default_batch_fetch_size: 100
        jdbc:
          exception-handling: ignore

  security:
    oauth2:
      client:
        registration:
          discord:
            client-name: discord
            client-id: test
            client-secret: test
            client-authentication-method: client_secret_post
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            scope:
              - identify
              - email
          naver:
            client-name: naver
            client-id: test
            client-secret: test
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - name
              - nickname
              - gender
              - birthday
              - birthyear
              - mobile
          google:
            client-name: google
            client-id: test
            client-secret: test
            scope: # 기본 값 openid,profile,email => profile, email 로 설정 변경
              - profile
              - email
          kakao:
            client-name: kakao
            client-id: test
            client-secret: test
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope: # https://developers.kakao.com/docs/latest/ko/kakaologin/common#user-info
              - profile_nickname
              - account_email
              - name
              - gender
              - birthday
              - birthyear
              - phone_number
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          discord:
            authorization-uri: https://discord.com/oauth2/authorize
            token-uri: https://discord.com/api/oauth2/token
            user-info-uri: https://discord.com/api/users/@me
            user-name-attribute: username
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-info-authentication-method: header
            user-name-attribute: id # Kakao 응답 값 id, connected_at, properties, kakao_account 중 id 지정

  mail:
    host: smtp.naver.com
    port: 587
    username: test
    password: test
    properties:
      mail:
        smtp:
          auth: true
          timeout: 5000
          starttls:
            enable: true

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}


SENDER_EMAIL: test@test.com

slack:
  webhook:
    url: test

minio:
  url: http://localhost:9000
  access-key: test
  secret-key: test
  region: test
  bucket: test

playhive:
  control:
    aesSecretKey: "MDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWY=" # "0123456789abcdef0123456789abcdef"
    aesIv: "YWJjZGVmMDEyMzQ1Njc4OQ==" # "abcdef0123456789"

jwt:
  issuer: "JWT_ISSUER"
  secret-key: "mT1VSuSPUFn8ZcFJyxned0KbyChtCxSwRD_jpIwg9_eUOx9vBXc27bzkQhZ6sWVuxxs2YAC0gmKxqMw4WNkRZw=="

app:
  frontend:
    url:
      dev: http://localhost:3000
      prod: https://your-production-domain.com

google:
  api:
    name: googleApi
    url: https://www.googleapis.com
    apiKey: test
